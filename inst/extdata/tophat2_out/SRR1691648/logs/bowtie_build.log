Settings:
  Output files: "/data1/ali/analysis/zrsr2/mapping/SRR1691648//tmp/segment_juncs.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  /data1/ali/analysis/zrsr2/mapping/SRR1691648//tmp/segment_juncs.fa
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:02
bmax according to bmaxDivN setting: 10125012
Using parameters --bmax 7593759 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 7593759 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:01
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:04
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:03
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 5.78572e+06 (target: 7593758)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 6384969
  (Using difference cover)
  Sorting block time: 00:00:04
Returning block of 6384970
Getting block 2 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 6250832
  (Using difference cover)
  Sorting block time: 00:00:05
Returning block of 6250833
Getting block 3 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 2824852
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 2824853
Getting block 4 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 6968320
  (Using difference cover)
  Sorting block time: 00:00:05
Returning block of 6968321
Getting block 5 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 6791933
  (Using difference cover)
  Sorting block time: 00:00:05
Returning block of 6791934
Getting block 6 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 6270773
  (Using difference cover)
  Sorting block time: 00:00:04
Returning block of 6270774
Getting block 7 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 5008365
  (Using difference cover)
  Sorting block time: 00:00:03
Returning block of 5008366
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 9594619
fchr[G]: 20231463
fchr[T]: 30369062
fchr[$]: 40500050
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 71999380 bytes to primary EBWT file: /data1/ali/analysis/zrsr2/mapping/SRR1691648//tmp/segment_juncs.1.bt2
Wrote 10125020 bytes to secondary EBWT file: /data1/ali/analysis/zrsr2/mapping/SRR1691648//tmp/segment_juncs.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 40500050
    bwtLen: 40500051
    sz: 10125013
    bwtSz: 10125013
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 2531254
    offsSz: 10125016
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 210938
    numLines: 210938
    ebwtTotLen: 13500032
    ebwtTotSz: 13500032
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:54
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:02
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 10125012
Using parameters --bmax 7593759 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 7593759 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:02
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:03
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 5.78572e+06 (target: 7593758)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 5725862
  (Using difference cover)
  Sorting block time: 00:00:03
Returning block of 5725863
Getting block 2 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 6369703
  (Using difference cover)
  Sorting block time: 00:00:05
Returning block of 6369704
Getting block 3 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 6808856
  (Using difference cover)
  Sorting block time: 00:00:04
Returning block of 6808857
Getting block 4 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 3187953
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 3187954
Getting block 5 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 5603929
  (Using difference cover)
  Sorting block time: 00:00:04
Returning block of 5603930
Getting block 6 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 5395440
  (Using difference cover)
  Sorting block time: 00:00:04
Returning block of 5395441
Getting block 7 of 7
  Reserving size (7593759) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 7408301
  (Using difference cover)
  Sorting block time: 00:00:05
Returning block of 7408302
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 9594619
fchr[G]: 20231463
fchr[T]: 30369062
fchr[$]: 40500050
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 71999380 bytes to primary EBWT file: /data1/ali/analysis/zrsr2/mapping/SRR1691648//tmp/segment_juncs.rev.1.bt2
Wrote 10125020 bytes to secondary EBWT file: /data1/ali/analysis/zrsr2/mapping/SRR1691648//tmp/segment_juncs.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 40500050
    bwtLen: 40500051
    sz: 10125013
    bwtSz: 10125013
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 2531254
    offsSz: 10125016
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 210938
    numLines: 210938
    ebwtTotLen: 13500032
    ebwtTotSz: 13500032
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:51
